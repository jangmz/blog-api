// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id        Int       @id @default(autoincrement())
  title     String
  content   String
  created   DateTime
  updated   DateTime?
  published Boolean   @default(false)
  comments  Comment[]
  authorId  Int
  author    User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
}

model Comment {
  id      Int      @id @default(autoincrement())
  content String
  created DateTime
  postId  Int
  userId  Int
  post    Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id       Int       @id @default(autoincrement())
  username String    @unique
  password String
  email    String    @unique
  role     Role      @default(USER)
  posts    Post[]
  comments Comment[]
}

model refreshToken {
  id Int @id @default(autoincrement())
  token String @unique
}

enum Role {
  USER // reads posts, writes comments
  AUTHOR // write/edit/delete posts, writes/deletes comments
}
